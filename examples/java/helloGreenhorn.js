// Generated by CoffeeScript 1.8.0

/*
helloGreenhorn.coffee
Written by Seth Bullock
sedabull@gmail.com
 */

(function() {
  var Greenhorn, TextSprite, env, helloWorld, scripts;

  document.title = 'Hello Greenhorn!';

  env = gh.env, Greenhorn = gh.Greenhorn, TextSprite = gh.TextSprite;

  env.ENGINE.rightHeader = 'BUTTONS';

  env.ENGINE.leftHeader = 'INFORMATION';

  scripts = {
    helloC: '/*helloWorld.c*/\n#include <stdio.h>\nint main(){\n    printf("Hello World!\\n");\n    return(0);\n}/*end main*/',
    helloCPP: '//helloWorld.cpp\n#include <iostream>\nint main(){\n    std::cout << "Hello World!" << endl;\n    return 0;\n}//end main',
    helloPHP: '<!-- helloWorld.php -->\n<html>\n  <body>\n    <?php echo \'Hello World!\'; ?>\n  </body>\n</html>',
    helloJava: '//HelloWorld.java\npublic class HelloWorld{\n    public static void main(String[] args){\n        System.out.println("Hello World!");\n    }//end main\n}//end HelloWorld class',
    helloRuby: '#helloWorld.rb\nputs "Hello World!"',
    helloPython: '#helloWorld.py\nprint "Hello World!"',
    helloJavaScript: '//helloWorld.js\nalert("Hello World!");',
    helloCoffeeScript: '#helloWorld.coffee\nconsole.log \'Hello World!\''
  };

  helloWorld = null;

  gh.init = function() {
    Greenhorn.start();
    helloWorld = new TextSprite({
      dx: 50,
      dy: 50,
      text: scripts.helloC,
      fontSize: 16,
      fontName: 'monospace',
      boundAction: 'BOUNCE'
    });
    Greenhorn.addButton({
      label: 'C',
      onclick: function() {
        return helloWorld.set('text', scripts.helloC);
      }
    });
    Greenhorn.addButton({
      label: 'CPP',
      onclick: function() {
        return helloWorld.set('text', scripts.helloCPP);
      }
    });
    Greenhorn.addButton({
      label: 'PHP',
      onclick: function() {
        return helloWorld.set('text', scripts.helloPHP);
      }
    });
    Greenhorn.addButton({
      label: 'Java',
      onclick: function() {
        return helloWorld.set('text', scripts.helloJava);
      }
    });
    Greenhorn.addButton({
      label: 'Ruby',
      onclick: function() {
        return helloWorld.set('text', scripts.helloRuby);
      }
    });
    Greenhorn.addButton({
      label: 'Python',
      onclick: function() {
        return helloWorld.set('text', scripts.helloPython);
      }
    });
    Greenhorn.addButton({
      label: 'JavaScript',
      onclick: function() {
        return helloWorld.set('text', scripts.helloJavaScript);
      }
    });
    Greenhorn.addButton({
      label: 'CoffeeScript',
      onclick: function() {
        return helloWorld.set('text', scripts.helloCoffeeScript);
      }
    });
    return $('#gh-left-panel').append('<h4 class=\'gh-sub-h\'>Instructions</h4>\n<p class=\'gh-p\'>\nUse the buttons on the right-hand side to\ndisplay a few example "Hello World!" programs.\n</p>\n<h4 class=\'gh-sub-h\'>Discussion</h4>\n<p class=\'gh-p\'>\nThe TextSprite class is a direct extention of the\nSprite class, meaning that anything a Sprite can\ndo, the TextSprite can also do. The only difference\nis that string data, instead of image data, is\nwhat\'s being displayed. As you can see by switching\nbetween a few examples, the TextSprite automatically\nresizes itself whenever it\'s content changes.\n</p>');
  };

  gh.update = function() {
    var current;
    current = helloWorld.get('text');
    return $('.gh-button').each(function() {
      if (scripts["hello" + this.innerHTML] === current) {
        return this.style.color = '#006400';
      } else {
        return this.style.color = '#C0C0C0';
      }
    });
  };

}).call(this);
